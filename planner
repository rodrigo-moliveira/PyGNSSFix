tasks for preliminary version:
    [X] adicionar o GPT3 model e as mapping functions
    [ ] add GGTO to the EOP database
    [ ] add leapseconds from rinex file to EOP database, when there is no file
    [ ] integrar a tropo com o resto do código
    [ ] estimar a troposfera -> considera-se T = m_d * T_D + m_w * T_w em que T_D (dry) vem do modelo a-priori e T_w
            é colocado no vetor de estados. m_w é o mapa, que é colocado na matriz da geometria. Ver Eq. (21.71) e (21.72)
    [ ] o GGTO/ISB não estõa muito bem integrados no código da class Epoch.
    [ ] re-adicionar o filtro de elevation no gnss_solver
    [ ] re-adicionar o smoothing, tendo em conta que afinal é necessário converter carrier de ciclos para metros! (no cycle slip detection yet)
    [ ] escrever um traceback dos filtros do preprocessor
    [ ] limpar o código / solve all TODOs
    [ ] update documentation

    melhorar o modulo de post processing:
    [ ] plot Iono states
    [ ] compute mean and std of pre/postfit residuals -> mean should be zero. STD should be sigma_URE (user range error). This should be computed for each satellite
    [ ] plot residuals
    [ ] plot position covariance (3D plot, 2D surfaces, etc...)
    [ ] consistency of residuals. Residuals divided by covariance matrix? See Tapler book and maybe my thesis, if I remember well
    [ ] plot 3d sigma of estimation error
    [ ] compute allan variance of clock bias and plot it

    [ ] revisão final do repositório. Update readme

    ---> THIS FINISHES FIRST RELEASE 1.0<---
--- ### ---

# Release 1.1 (PPPP Mode)
caminhar para PPPP:
    [ ] criar um config field com o modo (SPS ou PPPP)
    [ ] Adicionar Leitura e Modelo de Clocks, Sp3, IONEX (criar um PPPP)
    [ ] substituir alguns modelos do SPS pelos respetivos do PPPP
    [ ] outras correçoes: PCVs...
    [ ] adicionar um DCB Manager
        [ ] read DCB files
        [ ] understand different kind of DCB corrections (read papers)
        [ ] develop code accordingly for each DCB type
        [ ] ler sat DCBs e criar uma classe que substitua o modelo atual

finalizar o GNSS user positioning com:
    [ ] Adicionar Kalman filter com user dynamics
    [ ] process doppler measurements to estimate velocity
    [ ] ver código para calcular vetor velocidade a partir da mensagem de navegação (livro da ESA)


# Relase 1.2 (INS - IMU Emulator - Loosely Coupled)
loosely coupled:
    [ ] attitude basics
    [ ] sensor emulator
    [ ] INS
    [ ] loosely coupled

...
# Release 1.3
    [ ] cycle slip detection
    [ ] ambiguity fixing and resolution
    [ ] adicionar processamento de carrier phase - PPP